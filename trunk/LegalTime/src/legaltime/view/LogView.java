/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LogView.java
 *
 * Created on Aug 3, 2009, 2:20:20 PM
 */

package legaltime.view;

import java.text.DateFormat;
import javax.swing.ListModel;
import javax.swing.event.ListDataListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.text.DateFormatter;
import legaltime.modelsafe.EasyLog;
import legaltime.modelsafe.LogEvent;
import org.jdesktop.application.Action;


/**
 *
 * @author bmartin
 */
public class LogView extends javax.swing.JInternalFrame
        implements ListSelectionListener {
EasyLog easylog;
EventListModel eventListModel;
    /** Creates new form LogView */
    public LogView() {
        initComponents();
        easylog = EasyLog.getInstance();
        eventListModel = new EventListModel();
        lstEvents.setModel(eventListModel);
        lstEvents.addListSelectionListener(this);
        easylog.addEntry(EasyLog.INFO, "Constructed LOGView", this.getName(), "");
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmdRefresh = new javax.swing.JButton();
        scrlEvents = new javax.swing.JScrollPane();
        lstEvents = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDetails = new javax.swing.JTextArea();
        lblEventList = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmdClearLog = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(legaltime.LegalTimeApp.class).getContext().getResourceMap(LogView.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(legaltime.LegalTimeApp.class).getContext().getActionMap(LogView.class, this);
        cmdRefresh.setAction(actionMap.get("refresh")); // NOI18N
        cmdRefresh.setText(resourceMap.getString("cmdRefresh.text")); // NOI18N
        cmdRefresh.setName("cmdRefresh"); // NOI18N

        scrlEvents.setName("scrlEvents"); // NOI18N

        lstEvents.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstEvents.setName("lstEvents"); // NOI18N
        scrlEvents.setViewportView(lstEvents);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        txtDetails.setColumns(20);
        txtDetails.setRows(5);
        txtDetails.setName("txtDetails"); // NOI18N
        jScrollPane2.setViewportView(txtDetails);

        lblEventList.setText(resourceMap.getString("lblEventList.text")); // NOI18N
        lblEventList.setName("lblEventList"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        cmdClearLog.setAction(actionMap.get("clearLog")); // NOI18N
        cmdClearLog.setText(resourceMap.getString("cmdClearLog.text")); // NOI18N
        cmdClearLog.setName("cmdClearLog"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrlEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEventList)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmdRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdClearLog)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEventList)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrlEvents, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmdRefresh)
                            .addComponent(cmdClearLog)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdClearLog;
    private javax.swing.JButton cmdRefresh;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblEventList;
    private javax.swing.JList lstEvents;
    private javax.swing.JScrollPane scrlEvents;
    private javax.swing.JTextArea txtDetails;
    // End of variables declaration//GEN-END:variables

    public void valueChanged(ListSelectionEvent e) {
        if (e.getValueIsAdjusting()){
            return;
        }
        LogEvent event = easylog.getLogEvent(e.getFirstIndex());
        StringBuffer presentation =new StringBuffer();
        presentation.append("Date:     " + event.getDateOccured() +"\n");
        presentation.append("Location: " + event.getLocation() +"\n");
        presentation.append("Description: " + event.getDescription() +"\n");
        presentation.append("Details:\n" + event.getDetails() );
        txtDetails.setText(presentation.toString());
    }
    // End of variables declaration
    @Action
    public void refresh(){
        easylog.addEntry(EasyLog.INFO, "Log Refreshed", this.getName(), "");

        scrlEvents.revalidate();
        scrlEvents.repaint();
        lstEvents.revalidate();
        lstEvents.repaint();

        

    }
    @Action
    public void clearLog(){
        easylog.clearLog();
        easylog.addEntry(EasyLog.INFO, "Log Cleared", this.getName(), "");
        refresh();
    }

    private class EventListModel implements ListModel{
        DateFormat df = DateFormat.getDateTimeInstance();
        public int getSize() {
            return easylog.getEntryCount();
        }

        public Object getElementAt(int ndx) {
            return (df.format(easylog.getLogEvent(ndx).getDateOccured()) +" "+ easylog.getLogEvent(ndx).getDescription());
        }

        public void addListDataListener(ListDataListener l) {

        }

        public void removeListDataListener(ListDataListener l) {

        }

    }
}
