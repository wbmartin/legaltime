<project name="testmodule" basedir=".." default="everything">


	<!-- ========================== Default ==========================     -->
	<target name="everything" depends="clean,compile,copyLibs,copyetc,buildwar"/> <!-- deploy -->


	<!-- ========================== Properties ========================== -->
	<property name ="homedir" value ="src/com/martinanalytics/${ant.project.name}"/>
	<property name="src.dir" value="${homedir}/server/;${homedir}/server/model;${homedir}/client/;${homedir}/client/app;${homedir}/client/model/;${homedir}/client/model/bean/;${homedir}/client/controller/;${homedir}/client/view/;"/>
	<property name="temp.dir" value="/home/wbmartin/dev/deploy/testmodule" />
	<property name="temp.dir.web-inf" value="${temp.dir}/WEB-INF" />
	<property name="temp.dir.lib" value="${temp.dir.web-inf}/lib" />
	<property name="temp.dir.classes" value="${temp.dir.web-inf}/classes" />
	<property name="project.web-inf" value="war/WEB-INF" />

	<path id="run.class.path">
		<fileset dir="/home/wbmartin/dev/javaclass/">
			<!--<include name="javamail-1.4.2/mail.jar" /> -->
			<include name="gwt/gwt-log-3.1.3.jar" />
			<!--<include name="gxt-2.0.1/gxt.jar" /> -->
			<include name="gwt/gwt-servlet.jar" />
			<include name="smartgwt-2.4/smartgwt.jar" />
		</fileset>

	</path>


	<path id="build.class.path">



		<fileset dir="/home/wbmartin/.eclipse/org.eclipse.platform_3.5.0_155965261/plugins/com.google.gwt.eclipse.sdkbundle_2.3.0.r35v201105191506le/gwt-2.3.0/">
			<include name="gwt-user.jar" />
			<include name="gwt-dev-windows.jar" />
		</fileset>
		
		
		<path refid="run.class.path" />

	</path>
	

		<!-- ========================== COMPILE ========================== -->
	<target name="compile" depends="clean">
		<echo>=== COMPILE ===</echo>
		<echo>Compiling ${src.dir} files ...</echo>
		<javac debug="on" srcdir="${src.dir}" destdir="${temp.dir.classes}" includes="**/*">
			<classpath refid="build.class.path" />
		</javac>

	</target>

	<!-- ========================== Build War ========================== -->
	<target name="buildwar">
		<war basedir="${temp.dir}" destfile="${temp.dir}/${ant.project.name}.war" webxml="${temp.dir.web-inf}/web.xml">
			<!--<exclude name="${temp.dir.web-inf}/**" />
			  <exclude name="**/*.html"/>
			<exclude name="**/*.js"/>
			<exclude name="**/*.css"/>
			<exclude name="**/*.gif"/>
			<exclude name="**/*.jpg"/>
			<exclude name="**/*.swf"/>
			<exclude name="**/*.png"/>
			<exclude name="**/*.zip"/>
			<exclude name="**/*.war"/>-->
			<!--	<exclude name="testgwtproject2/**"/>
			<exclude name="WEB-INF/deploy/**"/>
		
			<webinf dir="${temp.dir.web-inf}/">
				<include name="**/*.jar" />
				<include name="**/*.xml" />
			</webinf>
	
			<classes dir="${project.web-inf}/classes"></classes>
			<lib dir="${project.web-inf}/lib"></lib>
			-->
			
		</war>
	</target>
	<target name = "copyetc">
			<copy todir="${temp.dir.web-inf}" flatten="false">
				<fileset dir="${project.web-inf}">			
							<exclude name ="deploy/**"/>
				</fileset>
			</copy>
			<copy todir="${temp.dir}/${ant.project.name}">
				<fileset dir = "war/${ant.project.name}">
		
				</fileset>
			</copy>
			<copy todir="${temp.dir}/">
				<fileset dir = "war">
					<include name="*.html"/>
					<include name="*.css"/>
				</fileset>
			</copy>
    </target>
	<target name="copyLibs">
		<copy todir="${temp.dir.lib}" flatten="true">
			<path refid="run.class.path" />


		</copy>
	</target>
	<!-- ========================== DEPLOY ========================== -->
	<target name="deploy">
		<copy file="${temp.dir}/${ant.project.name}.war" todir="C:\bin\glassfish\domains\domain1\autodeploy" />
		<tstamp>
		<format property="deployTime" pattern="HH:mm:ss" locale="en"/>
		</tstamp>

		<echo message="Current time and date: ${deployTime}" />
	</target>


	<!-- ==========================CLEAN========================== -->
	<target name="clean">
		<delete dir="${temp.dir}"  />
		<!--<delete dir="${temp.dir.classes}" />
		<delete dir="${temp.dir.lib}" />-->
		<delete dir="${temp.dir}"  />
		<mkdir dir="${temp.dir.classes}" />
		<mkdir dir="${temp.dir.lib}" />
	</target>











</project>